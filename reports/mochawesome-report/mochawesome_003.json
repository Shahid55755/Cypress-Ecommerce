{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 1,
    "failures": -1,
    "start": "2024-07-27T17:22:15.413Z",
    "end": "2024-07-27T17:23:09.936Z",
    "duration": 54523,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 11.11111111111111,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e037d2c5-5cee-42a7-818e-e808c2d937b4",
      "title": "",
      "fullFile": "cypress\\e2e\\Verify_RegisterUser.cy.js",
      "file": "cypress\\e2e\\Verify_RegisterUser.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
          "title": "Verify the functionality of Register User",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should register a user with a valid credentials",
              "fullTitle": "Verify the functionality of Register User it should register a user with a valid credentials",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectDays(account.day);\n  user.selectMonth(account.month);\n  user.selectYear(account.year);\n  user.selectCompany(account.company);\n  user.selectAddress1(account.address1);\n  user.selectAddress2(account.address2);\n  user.selectCountry(account.country);\n  user.selectState(account.state);\n  user.selectCity(account.city);\n  user.selectZipCode(account.zipcode);\n  user.enterPhone(account.mobile);\n  user.CreateAccount();\n  user.verifyAccountCreated();\n  cy.url().should(\"include\", \"/signup\");\n});",
              "err": {},
              "uuid": "e4893a97-0f92-4b53-871c-c061a4b40d3c",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should show validation errors on emtpy password field",
              "fullTitle": "Verify the functionality of Register User It should show validation errors on emtpy password field",
              "timedOut": null,
              "duration": 7107,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user.CreateAccount();\ncy.get(\"#password\").as(\"password\");\ncy.get(\"@password\").then($pass => {\n  const validationMessage = $pass[0].validationMessage;\n  expect(validationMessage).to.eq(\"Please fill out this field.\");\n});",
              "err": {},
              "uuid": "d7ff9223-74e1-4f9c-93fa-5b5ad5d3d2e0",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation error on empty firstname",
              "fullTitle": "Verify the functionality of Register User it should display validation error on empty firstname",
              "timedOut": null,
              "duration": 4733,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.CreateAccount();\n  cy.get(\"#first_name\").as(\"fname\");\n  cy.get(\"@fname\").then($firstname => {\n    const validationMessage = $firstname[0].validationMessage;\n    expect(validationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "a28cd6c6-0824-4fb0-bc52-3f906627e78c",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation error on empty lastname",
              "fullTitle": "Verify the functionality of Register User it should display validation error on empty lastname",
              "timedOut": null,
              "duration": 5358,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.CreateAccount();\n  cy.get(\"#last_name\").as(\"lname\");\n  cy.get(\"@lname\").then($lastname => {\n    const validationMessage = $lastname[0].validationMessage;\n    expect(validationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "b162a50b-4d00-4d86-ab01-c0501e96fd8a",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty address field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty address field",
              "timedOut": null,
              "duration": 5615,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.CreateAccount();\n  cy.get(\"#address1\").then($address => {\n    const addressValidationMessage = $address[0].validationMessage;\n    expect(addressValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "1020fda3-63ec-43f2-bc76-6f2f516dc8bf",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty state field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty state field",
              "timedOut": null,
              "duration": 5009,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.CreateAccount();\n  cy.get(\"#state\").then($state => {\n    const stateValidationMessage = $state[0].validationMessage;\n    expect(stateValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "d11c277a-78ec-4fe6-bafe-679c4c232fe0",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty city field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty city field",
              "timedOut": null,
              "duration": 7435,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.selectState(account.state);\n  user.CreateAccount();\n  cy.get(\"#city\").then($city => {\n    const cityValidationMessage = $city[0].validationMessage;\n    expect(cityValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "b2e553e4-3839-4c9e-9fc5-70e10191b61a",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty zipcode field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty zipcode field",
              "timedOut": null,
              "duration": 5868,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.selectState(account.state);\n  user.selectCity(account.city);\n  user.CreateAccount();\n  cy.get(\"#zipcode\").then($zip => {\n    const zipValidationMessage = $zip[0].validationMessage;\n    expect(zipValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "373eb6ba-c426-4dc5-bbaa-8e9ca439792a",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty mobile number field field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty mobile number field field",
              "timedOut": null,
              "duration": 6913,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.selectState(account.state);\n  user.selectCity(account.city);\n  user.selectZipCode(account.zipcode);\n  user.CreateAccount();\n  cy.get(\"#mobile_number\").then($mobile => {\n    const mobileValidationMessage = $mobile[0].validationMessage;\n    expect(mobileValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "12cf1cf0-5927-44e4-938e-d93e90bd1eb4",
              "parentUUID": "c4ee6049-27a6-4c71-a07e-4208f0c353c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7ff9223-74e1-4f9c-93fa-5b5ad5d3d2e0",
            "a28cd6c6-0824-4fb0-bc52-3f906627e78c",
            "b162a50b-4d00-4d86-ab01-c0501e96fd8a",
            "1020fda3-63ec-43f2-bc76-6f2f516dc8bf",
            "d11c277a-78ec-4fe6-bafe-679c4c232fe0",
            "b2e553e4-3839-4c9e-9fc5-70e10191b61a",
            "373eb6ba-c426-4dc5-bbaa-8e9ca439792a",
            "12cf1cf0-5927-44e4-938e-d93e90bd1eb4"
          ],
          "failures": [],
          "pending": [
            "e4893a97-0f92-4b53-871c-c061a4b40d3c"
          ],
          "skipped": [],
          "duration": 48038,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}