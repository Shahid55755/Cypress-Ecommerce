{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 10,
    "pending": 0,
    "failures": 3,
    "start": "2024-07-20T17:41:28.541Z",
    "end": "2024-07-20T17:43:57.056Z",
    "duration": 148515,
    "testsRegistered": 13,
    "passPercent": 76.92307692307693,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb88168c-f1af-4dff-8efb-e0262299c958",
      "title": "",
      "fullFile": "cypress\\e2e\\Verify_RegisterUser.cy.js",
      "file": "cypress\\e2e\\Verify_RegisterUser.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13b281be-34f9-4514-aa93-23816ae905eb",
          "title": "Verify the functionality of Register User",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should register a user with a valid credentials",
              "fullTitle": "Verify the functionality of Register User it should register a user with a valid credentials",
              "timedOut": null,
              "duration": 21563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const formData = {\n  password: _faker.faker.internet.password(10, false, /[A-Za-z0-9]/, \"James@\"),\n  firstname: _faker.faker.name.firstName(),\n  lastname: _faker.faker.name.lastName(),\n  selectDays: _faker.faker.datatype.number({\n    min: 1,\n    max: 30\n  }).toString(),\n  selectMonth: _faker.faker.datatype.number({\n    min: 1,\n    max: 12\n  }).toString(),\n  selectYear: _faker.faker.date.past(30, new Date()).getFullYear().toString(),\n  company: _faker.faker.company.name(),\n  address1: _faker.faker.address.streetAddress(),\n  address2: _faker.faker.address.secondaryAddress(),\n  country: \"Canada\",\n  state: _faker.faker.address.state(),\n  city: _faker.faker.address.city(),\n  zipcode: _faker.faker.address.zipCode(),\n  phone: _faker.faker.phone.number()\n};\nuser.enterpassword(formData.password);\nuser.enterfirst_name(formData.firstname);\nuser.enterlast_name(formData.lastname);\nuser.selectDays(formData.selectDays);\nuser.selectMonth(formData.selectMonth);\nuser.selectYear(formData.selectYear);\nuser.selectCompany(formData.company), user.selectAddress1(formData.address1), user.selectAddress2(formData.address2), user.selectCountry(formData.country), user.selectState(formData.state), user.selectCity(formData.city), user.selectZipCode(formData.zipcode), user.enterPhone(formData.phone);\nuser.CreateAccount(), user.verifyAccountCreated();",
              "err": {},
              "uuid": "d9e2cc65-40ed-4572-853c-3089b43ded39",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should show validation errors on emtpy password field",
              "fullTitle": "Verify the functionality of Register User It should show validation errors on emtpy password field",
              "timedOut": null,
              "duration": 4760,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user.CreateAccount();\ncy.get(\"#password\").as(\"password\");\ncy.get(\"@password\").then($pass => {\n  const validationMessage = $pass[0].validationMessage;\n  expect(validationMessage).to.eq(\"Please fill out this field.\");\n});",
              "err": {},
              "uuid": "f27cf4d5-f0f9-46a4-96a8-c50f4f6900e3",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation error on empty firstname",
              "fullTitle": "Verify the functionality of Register User it should display validation error on empty firstname",
              "timedOut": null,
              "duration": 8410,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.CreateAccount();\n  cy.get(\"#first_name\").as(\"fname\");\n  cy.get(\"@fname\").then($firstname => {\n    const validationMessage = $firstname[0].validationMessage;\n    expect(validationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "dad79a15-7226-4fe6-83d6-52a67076209d",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation error on empty lastname",
              "fullTitle": "Verify the functionality of Register User it should display validation error on empty lastname",
              "timedOut": null,
              "duration": 6542,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.CreateAccount();\n  cy.get(\"#last_name\").as(\"lname\");\n  cy.get(\"@lname\").then($lastname => {\n    const validationMessage = $lastname[0].validationMessage;\n    expect(validationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "143a48c5-a798-4853-b430-1b18c6c432ad",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty address field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty address field",
              "timedOut": null,
              "duration": 6344,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.CreateAccount();\n  cy.get(\"#address1\").then($address => {\n    const addressValidationMessage = $address[0].validationMessage;\n    expect(addressValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "30068925-2920-4dae-ab35-38e7ba771ec1",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty state field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty state field",
              "timedOut": null,
              "duration": 8479,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.CreateAccount();\n  cy.get(\"#state\").then($state => {\n    const stateValidationMessage = $state[0].validationMessage;\n    expect(stateValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "b428742e-a523-4d8b-96e9-feff1081cc42",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty city field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty city field",
              "timedOut": null,
              "duration": 9243,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.selectState(account.state);\n  user.CreateAccount();\n  cy.get(\"#city\").then($city => {\n    const cityValidationMessage = $city[0].validationMessage;\n    expect(cityValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "e74edab1-83d4-43e9-b340-a20088333624",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty zipcode field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty zipcode field",
              "timedOut": null,
              "duration": 9623,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.selectState(account.state);\n  user.selectCity(account.city);\n  user.CreateAccount();\n  cy.get(\"#zipcode\").then($zip => {\n    const zipValidationMessage = $zip[0].validationMessage;\n    expect(zipValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "0d8d19a9-0171-4eff-a9ca-7901133417ad",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should display validation message on empty mobile number field field",
              "fullTitle": "Verify the functionality of Register User it should display validation message on empty mobile number field field",
              "timedOut": null,
              "duration": 8453,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n  user.enterfirst_name(account.firstname);\n  user.enterlast_name(account.lastname);\n  user.selectAddress1(account.address1);\n  user.selectState(account.state);\n  user.selectCity(account.city);\n  user.selectZipCode(account.zipcode);\n  user.CreateAccount();\n  cy.get(\"#mobile_number\").then($mobile => {\n    const mobileValidationMessage = $mobile[0].validationMessage;\n    expect(mobileValidationMessage).to.eq(\"Please fill out this field.\");\n  });\n});",
              "err": {},
              "uuid": "c129cf21-67a3-4292-8b44-ab30a98f415c",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Password length should be greather than 7",
              "fullTitle": "Verify the functionality of Register User Password length should be greather than 7",
              "timedOut": null,
              "duration": 9970,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"RegisterUsers\").then(data => {\n  const account = data.account;\n  user.enterpassword(account.password);\n});",
              "err": {},
              "uuid": "680e23cb-cad1-4e6e-92a7-05fe45e194bf",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "First name should not accept numbers/Digits",
              "fullTitle": "Verify the functionality of Register User First name should not accept numbers/Digits",
              "timedOut": null,
              "duration": 10234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "user.enterfirst_name(\"Shahid77779\");\ncy.get(\"#first_name\").should(\"be.visible\").and(\"contain\", \"Not accepting Digits in Last Name field\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input#first_name.form-control>' to contain 'Not accepting Digits in Last Name field'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input#first_name.form-control>' to contain 'Not accepting Digits in Last Name field'\n    at Context.eval (webpack://learning/./cypress/e2e/Verify_RegisterUser.cy.js:210:7)",
                "diff": null
              },
              "uuid": "debb85fb-17ff-44b9-8dad-c1c6154d63be",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Last name should not accept numbers/Digits",
              "fullTitle": "Verify the functionality of Register User Last name should not accept numbers/Digits",
              "timedOut": null,
              "duration": 12319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "user.enterlast_name(\"Shahid77779\");\ncy.get(\"#last_name\").should(\"be.visible\").and(\"contain\", \"Not accepting Digits in Last Name field\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input#last_name.form-control>' to contain 'Not accepting Digits in Last Name field'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input#last_name.form-control>' to contain 'Not accepting Digits in Last Name field'\n    at Context.eval (webpack://learning/./cypress/e2e/Verify_RegisterUser.cy.js:216:7)",
                "diff": null
              },
              "uuid": "a1dffccf-35db-49d4-880a-31a7df03d222",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "password length should not be less than 8 character, Should be combination of character/Digits/Special characters",
              "fullTitle": "Verify the functionality of Register User password length should not be less than 8 character, Should be combination of character/Digits/Special characters",
              "timedOut": null,
              "duration": 15672,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "user.enterpassword(\"123434\");\ncy.get(\"#password\").invoke(\"prop\", \"validationMessage\").should(\"equal\", \"Please enter a password at least 8 characters long and include a combination of letters, digits, and special characters.\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '' to equal 'Please enter a password at least 8 characters long and include a combination of letters, digits, and special characters.'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '' to equal 'Please enter a password at least 8 characters long and include a combination of letters, digits, and special characters.'\n    at Context.eval (webpack://learning/./cypress/e2e/Verify_RegisterUser.cy.js:222:7)",
                "diff": "+ 'Please enter a password at least 8 characters long and include a combination of letters, digits, and special characters.'\n"
              },
              "uuid": "776bd6c4-c5bd-4ede-b780-693fc004c7ac",
              "parentUUID": "13b281be-34f9-4514-aa93-23816ae905eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9e2cc65-40ed-4572-853c-3089b43ded39",
            "f27cf4d5-f0f9-46a4-96a8-c50f4f6900e3",
            "dad79a15-7226-4fe6-83d6-52a67076209d",
            "143a48c5-a798-4853-b430-1b18c6c432ad",
            "30068925-2920-4dae-ab35-38e7ba771ec1",
            "b428742e-a523-4d8b-96e9-feff1081cc42",
            "e74edab1-83d4-43e9-b340-a20088333624",
            "0d8d19a9-0171-4eff-a9ca-7901133417ad",
            "c129cf21-67a3-4292-8b44-ab30a98f415c",
            "680e23cb-cad1-4e6e-92a7-05fe45e194bf"
          ],
          "failures": [
            "debb85fb-17ff-44b9-8dad-c1c6154d63be",
            "a1dffccf-35db-49d4-880a-31a7df03d222",
            "776bd6c4-c5bd-4ede-b780-693fc004c7ac"
          ],
          "pending": [],
          "skipped": [],
          "duration": 131612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}